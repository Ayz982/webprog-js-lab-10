{"version":3,"file":"countdown-timer.js","sources":["../src/js/flatpickrs.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const datetimePicker = document.getElementById(\"datetime-picker\");\r\n    const startButton = document.querySelector(\"[data-start]\");  \r\n    const daysEl = document.querySelector(\"[data-days]\");\r\n    const hoursEl = document.querySelector(\"[data-hours]\");\r\n    const minutesEl = document.querySelector(\"[data-minutes]\");\r\n    const secondsEl = document.querySelector(\"[data-seconds]\");\r\n\r\n    let userSelectedDate = null;\r\n    let countdownInterval = null;\r\n\r\n    const options = {\r\n        enableTime: true,\r\n        time_24hr: true,\r\n        defaultDate: new Date(),\r\n        minuteIncrement: 1,\r\n        onClose(selectedDates) {\r\n            userSelectedDate = selectedDates[0];\r\n\r\n            if (userSelectedDate && userSelectedDate > new Date()) {\r\n                startButton.disabled = false;\r\n                startButton.classList.add(\"active\");  \r\n                hideAlert();\r\n            } else {\r\n                startButton.disabled = true;\r\n                startButton.classList.remove(\"active\"); \r\n                showAlert(\"Please choose a date in the future\");\r\n            }\r\n        },\r\n    };\r\n\r\n    flatpickr(datetimePicker, options);\r\n\r\n    function convertMs(ms) {\r\n        const second = 1000;\r\n        const minute = second * 60;\r\n        const hour = minute * 60;\r\n        const day = hour * 24;\r\n\r\n        const days = Math.floor(ms / day);\r\n        const hours = Math.floor((ms % day) / hour);\r\n        const minutes = Math.floor(((ms % day) % hour) / minute);\r\n        const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n        return { days, hours, minutes, seconds };\r\n    }\r\n\r\n    function addLeadingZero(value) {\r\n        return String(value).padStart(2, \"0\");\r\n    }\r\n\r\n    function showAlert(message) {\r\n        iziToast.error({\r\n            title: \"Error\",\r\n            message: message,\r\n            position: \"topRight\",\r\n        });\r\n    }\r\n\r\n    function hideAlert() {\r\n        iziToast.destroy();\r\n    }\r\n\r\n    startButton.addEventListener(\"click\", () => {\r\n        if (!userSelectedDate) return;\r\n\r\n        datetimePicker.disabled = true;\r\n        startButton.disabled = true;\r\n        startButton.classList.remove(\"active\");  \r\n\r\n        countdownInterval = setInterval(() => {\r\n            const now = new Date();\r\n            const timeDifference = userSelectedDate.getTime() - now.getTime();\r\n\r\n            if (timeDifference <= 0) {\r\n                clearInterval(countdownInterval);\r\n                iziToast.success({\r\n                    title: \"Countdown Finished!\",\r\n                    message: \"The countdown has reached zero!\",\r\n                    position: \"topRight\",\r\n                });\r\n                datetimePicker.disabled = false;\r\n                daysEl.textContent = \"00\";\r\n                hoursEl.textContent = \"00\";\r\n                minutesEl.textContent = \"00\";\r\n                secondsEl.textContent = \"00\";\r\n                return;\r\n            }\r\n\r\n            const { days, hours, minutes, seconds } = convertMs(timeDifference);\r\n\r\n            daysEl.textContent = addLeadingZero(days);\r\n            hoursEl.textContent = addLeadingZero(hours);\r\n            minutesEl.textContent = addLeadingZero(minutes);\r\n            secondsEl.textContent = addLeadingZero(seconds);\r\n        }, 1000);\r\n    });\r\n});\r\n"],"names":["datetimePicker","startButton","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","flatpickr","selectedDates","hideAlert","showAlert","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","message","iziToast","now","timeDifference"],"mappings":"yFAKA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAoB,KAsBxBC,EAAUR,EApBM,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAE9BH,GAAoBA,EAAmB,IAAI,MAC3CL,EAAY,SAAW,GACvBA,EAAY,UAAU,IAAI,QAAQ,EAClCS,MAEAT,EAAY,SAAW,GACvBA,EAAY,UAAU,OAAO,QAAQ,EACrCU,EAAU,oCAAoC,EAErD,CACT,CAEqC,EAEjC,SAASC,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACzC,CAED,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACvC,CAED,SAASR,EAAUS,EAAS,CACxBC,EAAS,MAAM,CACX,MAAO,QACP,QAASD,EACT,SAAU,UACtB,CAAS,CACJ,CAED,SAASV,GAAY,CACjBW,EAAS,QAAO,CACnB,CAEDpB,EAAY,iBAAiB,QAAS,IAAM,CACnCK,IAELN,EAAe,SAAW,GAC1BC,EAAY,SAAW,GACvBA,EAAY,UAAU,OAAO,QAAQ,EAErCM,EAAoB,YAAY,IAAM,CAClC,MAAMe,EAAM,IAAI,KACVC,EAAiBjB,EAAiB,QAAS,EAAGgB,EAAI,QAAO,EAE/D,GAAIC,GAAkB,EAAG,CACrB,cAAchB,CAAiB,EAC/Bc,EAAS,QAAQ,CACb,MAAO,sBACP,QAAS,kCACT,SAAU,UAC9B,CAAiB,EACDrB,EAAe,SAAW,GAC1BE,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxB,MACH,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUW,CAAc,EAElErB,EAAO,YAAcgB,EAAeJ,CAAI,EACxCX,EAAQ,YAAce,EAAeH,CAAK,EAC1CX,EAAU,YAAcc,EAAeF,CAAO,EAC9CX,EAAU,YAAca,EAAeD,CAAO,CACjD,EAAE,GAAI,EACf,CAAK,CACL,CAAC"}